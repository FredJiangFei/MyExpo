### Build schema for eas.json 每个Property的描述 #############################################################
    {
        "build": {
            "base": {
                "node": "12.13.0",
                "yarn": "1.22.5",
                "env": {
                    "EXAMPLE_ENV": "example value"
                },
                "android": {
                    "image": "default",
                    "env": {
                    "PLATFORM": "android"
                    }
                },
                "ios": {
                    "image": "latest",
                    "env": {
                    "PLATFORM": "ios"
                    }
                }
            },
            "development": {
                "extends": "base",
                "developmentClient": true,
                "env": {
                    "ENVIRONMENT": "development"
                },
                "android": {
                    "distribution": "internal",
                    "withoutCredentials": true
                },
                "ios": {
                    "simulator": true
                }
            },
            "staging": {
                "extends": "base",
                "env": {
                    "ENVIRONMENT": "staging"
                },
                "distribution": "internal",
                "android": {
                    "buildType": "apk"
                }
            },
            "production": {
                "extends": "base",
                "env": {
                    "ENVIRONMENT": "production"
                }
            }
        }
    }
### Migrating from "expo build"

### Build lifecycle hooks
    five EAS Build lifecycle npm hooks that you can set in your package.json

### Integrating with third-party tooling
    How to set up EAS Build with a monorepo

### Using private npm packages

### Environment variables and secrets #############################################################
    Environment variables in Expo
        Using app manifest extra
            app.config.js
                COOLAPP_COMMENTS=true npx expo start
                module.exports = {
                    name: 'CoolApp',
                    version: '1.0.0',
                    extra: {
                    enableComments: process.env.COOLAPP_COMMENTS === 'true',
                    },
                };
            code
                import Constants from 'expo-constants';
                export const Post = ({ enableComments = Constants.manifest.extra.enableComments || false }) => (
                <>
                    <Text>...</Text>
                    {enableComments && <Comments />}
                </>
                );
    Using a dotenv file
        https://github.com/motdotla/dotenv
    
    Security considerations
        Never store sensitive secrets in your environment variables.

### Using plaintext environment variables

### Built-in environment variables

### Using secrets in environment variables
    The secret values are encrypted, and are only decrypted in a secure environment by EAS servers
    100 account-wide secrets for each Expo account (account下所有app用)
    100 app-specific secrets for each app (指定app用)

### Secrets on the Expo website

### Common questions #############################################################
    1. Can I share environment variables defined in eas.json with expo start and eas update?
    >>>> eas.json
    {
        "build": {
          "production": {
            "channel": "production",
            "env": {
              "API_URL": "https://api.production.com",
              "ENABLE_HIDDEN_FEATURES": 0
            }
          },
          "preview": {
            "channel": "staging",
            "env": {
              "API_URL": "https://api.staging.com",
              "ENABLE_HIDDEN_FEATURES": 1
            }
          }
        }
      }
    >>>> app.config.js
    export default {
        // ...
        extra: {
            // Fall back to development URL when not set
            apiUrl: process.env.API_URL ?? 'https://localhost:3000'
            enableHiddenFeatures: process.env.ENABLE_HIDDEN_FEATURES ? Boolean(process.env.ENABLE_HIDDEN_FEATURES) : true,
        }
    }
    >>>> API_URL=https://api.staging.com ENABLE_HIDDEN_FEATURES=1 eas update
    
        <1> Move values to application code and switch based on channel.
        <2> Use a single environment variable to toggle configuration. 

    2. How are naming collisions between secrets and the env field in eas.json handled?
    3. How do environment variables work for my Expo Development Client builds?
    4. Can I just set my environment variables on a CI provider?

### Building APKs for Android emulators and devices

### Building for iOS simulators

### App version management #############################################################
    ### app store 版本
        version

    ### 开发构建版本
        android.versionCode
        ios.buildNumber

    ### 不改版本导致发布拒绝
        a duplicate version number will cause app store rejection

    ### version map
    
    eas.json
        "cli": {
            "appVersionSource": "remote" / "local"
        },
        EAS stores version information scoped by 
            account, 
            slug, 
            platform, 
            application ID/bundle identifier
    Recommended workflow

### Troubleshooting build errors and crashes

### Installing app variants on the same device